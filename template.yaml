Transform: AWS::Serverless-2016-10-31
Resources:
  QuotesTable:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
      BillingMode: PAY_PER_REQUEST
      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE
      StreamSpecification:
        StreamViewType: NEW_AND_OLD_IMAGES
      TimeToLiveSpecification:
        AttributeName: expiration
        Enabled: true
  QuotesIngestor:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: QuotesIngestor
      CodeUri: src/ingest-quotes
      Handler: index.handler
      Runtime: nodejs18.x
      MemorySize: 512
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME: !Ref QuotesTable
          TABLE_ARN: !GetAtt QuotesTable.Arn
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref QuotesTable
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - index.mts
        External:
          - '@aws-sdk/*'
          - aws-sdk
        Minify: false
  QuotesIngestorLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${QuotesIngestor}
  Api:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub
        - ${ResourceName} From Stack ${AWS::StackName}
        - ResourceName: Api
      StageName: Prod
      DefinitionBody:
        openapi: '3.0'
        info: {}
        paths:
          /get-latest-quote:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri: !Sub arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${GetLatestQuoteApi.Arn}/invocations
              responses: {}
      EndpointConfiguration: REGIONAL
      TracingEnabled: true
  QuotesGeneratorCron:
    Type: AWS::Scheduler::Schedule
    Properties:
      ScheduleExpression: rate(1 minute)
      FlexibleTimeWindow:
        Mode: 'OFF'
      Target:
        Arn: !GetAtt QuotesIngestor.Arn
        RoleArn: !GetAtt QuotesGeneratorCronToQuotesIngestorRole.Arn
  QuotesGeneratorCronToQuotesIngestorRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Principal:
            Service: !Sub scheduler.${AWS::URLSuffix}
          Action: sts:AssumeRole
          Condition:
            ArnLike:
              aws:SourceArn: !Sub
                - arn:${AWS::Partition}:scheduler:${AWS::Region}:${AWS::AccountId}:schedule/*/${AWS::StackName}-${ResourceId}-*
                - ResourceId: QuotesGeneratorCron
      Policies:
        - PolicyName: StartExecutionPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource: !GetAtt QuotesIngestor.Arn
  GetLatestQuoteApi:
    Type: AWS::Serverless::Function
    Properties:
      Description: !Sub
        - Stack ${AWS::StackName} Function ${ResourceName}
        - ResourceName: GetLatestQuoteApi
      CodeUri: src/api
      Handler: index.handler
      Runtime: nodejs18.x
      MemorySize: 1024
      Timeout: 30
      Tracing: Active
      Environment:
        Variables:
          TABLE_NAME: !Ref QuotesTable
      Policies:
        - DynamoDBReadPolicy:
            TableName: !Ref QuotesTable
      Events:
        ApiGETgetlatestquote:
          Type: Api
          Properties:
            Path: /get-latest-quote
            Method: GET
            RestApiId: !Ref Api
    Metadata:
      BuildMethod: esbuild
      BuildProperties:
        EntryPoints:
          - index.mts
        External:
          - '@aws-sdk/*'
          - aws-sdk
        Minify: false
  GetLatestQuoteApiLogGroup:
    Type: AWS::Logs::LogGroup
    DeletionPolicy: Retain
    Properties:
      LogGroupName: !Sub /aws/lambda/${GetLatestQuoteApi}
Metadata:
  AWS::Composer::Groups:
    Group:
      Label: Ingest
      Members:
        - QuotesIngestor
        - QuotesGeneratorCron
    Group2:
      Label: Api
      Members:
        - GetLatestQuoteApi
        - Api